diff --git a/cmd/interop/CMakeLists.txt b/cmd/interop/CMakeLists.txt
index 9ea9907..becff96 100644
--- a/cmd/interop/CMakeLists.txt
+++ b/cmd/interop/CMakeLists.txt
@@ -50,26 +50,7 @@ find_package(nlohmann_json 3.2 REQUIRED)
 ### Protobuf generation
 ###
 
-# Get the proto file from the interop repo 
-include( ExternalProject )
-find_package( Git REQUIRED )
-set( MLS_IMPLEMENTATIONS_REPO_URL https://github.com/mlswg/mls-implementations.git )
-set_directory_properties( PROPERTIES EP_PREFIX ${CMAKE_BINARY_DIR}/third_party )
-
-ExternalProject_Add(
-    mls-interop-extern
-    GIT_REPOSITORY ${MLS_IMPLEMENTATIONS_REPO_URL}
-    GIT_TAG origin/main
-    TIMEOUT 10
-    UPDATE_COMMAND ${GIT_EXECUTABLE} pull origin main
-    CONFIGURE_COMMAND ""
-    BUILD_COMMAND ""
-    INSTALL_COMMAND ""
-    LOG_DOWNLOAD ON
-   )
-
-ExternalProject_Get_Property(mls-interop-extern SOURCE_DIR)
-set(PROTO_PATH ${SOURCE_DIR}/interop/proto CACHE INTERNAL "Folder for .proto data")
+set(PROTO_PATH interop/proto CACHE INTERNAL "Folder for .proto data")
 
 # Generate .h and .cc files from the proto file
 set(PROTO "mls_client")
@@ -90,14 +71,13 @@ add_custom_command(
         -I "${PROTO_PATH}"
         --plugin=protoc-gen-grpc="${GRPC_CPP_PLUGIN_EXECUTABLE}"
         "${PROTO_FILE}"
-      DEPENDS mls-interop-extern)
+      )
 
 ###
 ### GRPC Executable
 ###
 file(GLOB_RECURSE BIN_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
 add_executable(${APP_NAME} ${BIN_SOURCES} ${PB_SRC} ${GRPC_SRC})
-add_dependencies(${APP_NAME} mls-interop-extern)
 target_include_directories(${APP_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
 target_link_libraries(${APP_NAME} 
   gflags 
